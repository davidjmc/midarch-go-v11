datatype PROCNAMES = engine | invoker | t2 | t1 | srh 
channel I_PosInvP,I_PosTerR,I_PreInvR
channel InvP,TerP,InvR,TerR : PROCNAMES
ENGINE = InvP.t2 -> I_PosInvP -> TerP.t2 -> ENGINE
INVOKER = InvP.t1 -> I_PosInvP -> InvR.t2 -> TerR.t2 -> I_PosTerR -> TerP.t1 -> INVOKER 
SRH = I_PreInvR -> InvR.t1 -> TerR.t1 -> I_PosTerR -> SRH
T2 = InvP.invoker -> InvR.engine -> TerR.engine -> TerP.invoker -> T2
T1 = InvP.srh -> InvR.invoker -> TerR.invoker -> TerP.srh -> T1

P1 = (ENGINE|||INVOKER|||SRH)
[|{|TerR,InvP,TerP,InvR|}|]
(T1[[InvP.srh <- InvR.t1,InvR.invoker <- InvP.t1,TerR.invoker <- TerP.t1,TerP.srh <- TerR.t1]]|||T2[[InvP.invoker <- InvR.t2,InvR.engine <- InvP.t2,TerR.engine <- TerP.t2,TerP.invoker <- TerR.t2]])
assert P1 :[deadlock free]