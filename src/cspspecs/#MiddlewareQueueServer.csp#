datatype PROCNAMES = invoker | srh | queueserver | t1 | t2 
channel I_PosTerR_invoker,I_PreInvR_srh,I_PosTerR_srh,I_PosInvP_queueserver,I_PosInvP_invoker
channel InvP,TerP,InvR,TerR : PROCNAMES

QUEUESERVER = InvP.t2 -> I_PosInvP_queueserver -> TerP.t2 -> QUEUESERVER
INVOKER = InvP.t1 -> I_PosInvP_invoker -> InvR.t2 -> TerR.t2 -> I_PosTerR_invoker -> TerP.t1 -> INVOKER 
SRH = I_PreInvR_srh -> InvR.t1 -> TerR.t1 -> I_PosTerR_srh -> SRH

T1 = InvP.srh -> InvR.invoker -> TerR.invoker -> TerP.srh -> T1
T2 = InvP.invoker -> InvR.queueserver -> TerR.queueserver -> TerP.invoker -> T2

P1 = (QUEUESERVER|||INVOKER|||SRH)
[|{|TerR,InvP,TerP,InvR|}|]
(T1[[InvP.srh <- InvR.t1,InvR.invoker <- InvP.t1,TerR.invoker <- TerP.t1,TerP.srh <- TerR.t1]]|||T2[[InvP.invoker <- InvR.t2,InvR.queueserver <- InvP.t2,TerR.queueserver <- TerP.t2,TerP.invoker <- TerR.t2]])
assert P1 :[deadlock free]